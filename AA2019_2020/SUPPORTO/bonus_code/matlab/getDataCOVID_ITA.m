%
% estrazioni dati COVID-19 dal sito:
fileURL = 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv';

%  mantenuto dalla protezione civile sulla repository git: https://github.com/pcm-dpc/COVID-19
%
%  basato sullo script di Matteo Secl√¨ usato negli script di E. Cheynet
%  https://it.mathworks.com/matlabcentral/fileexchange/74545-generalized-seir-epidemic-model-fitting-and-computation

%% Setup the Import Options and import the data
% Set the number of columns
opts = delimitedTextImportOptions("NumVariables", 16);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = [           ...
  "Date",                        ...
  "CountryCode",                 ...
  "RegionCode",                  ...
  "RegionName",                  ...
  "Lat",                         ...
  "Long",                        ...
  "HospitalizedWithSymptoms",    ...
  "HospitalizedInIntensiveCare", ...
  "Hospitalized",                ...
  "HomeConfinement",             ...
  "Quarantined",                 ...
  "variationQuarantined",        ...
  "NewQuarantined",              ...
  "Recovered",                   ...
  "Deaths",                      ...
  "Confirmed",                   ...
  "Swabs"                        ...
];

opts.VariableTypes = [ ...
  "string", ...
  "string", ...
  "uint8",  ...
  "string", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double", ...
  "double"  ...
];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule    = "read";

% Specify variable properties
% Can create an error with older Matlab versions
% opts = setvaropts(opts, "Date", "InputFormat", "yyyy-MM-dd HH:mm:ss"); % Use "Format","yyyy-MM-dd'T'HH:mm:ss" from Mar 23, 2020 on

% Download the CSV file
websave('dummy.csv',fileURL);

% Import the data
fid = fopen('dummy.csv');
tableCOVIDItaly = readtable('dummy.csv', opts);
fclose(fid);
delete('dummy.csv');

Date                        = tableCOVIDItaly.Date;
CountryCode                 = tableCOVIDItaly.CountryCode;
RegionCode                  = tableCOVIDItaly.RegionCode;
RegionName                  = tableCOVIDItaly.RegionName;
Lat                         = tableCOVIDItaly.Lat;
Long                        = tableCOVIDItaly.Long;
HospitalizedWithSymptoms    = tableCOVIDItaly.HospitalizedWithSymptoms;
HospitalizedInIntensiveCare = tableCOVIDItaly.HospitalizedInIntensiveCare;
Hospitalized                = tableCOVIDItaly.Hospitalized;
HomeConfinement             = tableCOVIDItaly.HomeConfinement;
Quarantined                 = tableCOVIDItaly.Quarantined;
variationQuarantined        = tableCOVIDItaly.variationQuarantined;
NewQuarantined              = tableCOVIDItaly.NewQuarantined;
Recovered                   = tableCOVIDItaly.Recovered;
Deaths                      = tableCOVIDItaly.Deaths;
Confirmed                   = tableCOVIDItaly.Confirmed;
tamponi                     = tableCOVIDItaly.Swabs;

%
% estraggo nomi delle regioni
%
RN   = unique(sort(RegionName));
DATA = struct();
for k=1:length(RN)
  N          = RN(k);
  N          = strrep(N,'-','_');
  N          = strrep(N,' ','_');
  N          = strrep(N,'.','');
  N          = strrep(N,'''','');
  DATA.(N).d = [];
  DATA.(N).I = [];
  DATA.(N).R = [];
  DATA.(N).D = [];
  DATA.(N).C = [];
  DATA.(N).pop = 0;
end

%
% abitanti per regioni (dati indicativi trovati via "google")
%
DATA.Lombardia.pop             = 10018806;
DATA.Lazio.pop                 = 5898124;
DATA.Campania.pop              = 5839084;
DATA.Sicilia.pop               = 5056641;
DATA.Veneto.pop                = 4907529;
DATA.Emilia_Romagna.pop        = 4448841;
DATA.Piemonte.pop              = 4392526;
DATA.Puglia.pop                = 4063888;
DATA.Toscana.pop               = 3742437;
DATA.Calabria.pop              = 1965128;
DATA.Sardegna.pop              = 1653135;
DATA.Liguria.pop               = 1565307;
DATA.Marche.pop                = 1538055;
DATA.Abruzzo.pop               = 1322247;
DATA.Friuli_Venezia_Giulia.pop = 1217872;
DATA.PA_Trento.pop             = 538223;
DATA.PA_Bolzano.pop            = 520891;
DATA.Umbria.pop                = 888908;
DATA.Basilicata.pop            = 570365;
DATA.Molise.pop                = 310449;
DATA.Valle_dAosta.pop          = 126883;

%
% Estraggo i dati dalla tabella
%
for k=1:length(Date)
  if extractBetween(Date(k),1,8) == '20202020'
    d = extractBetween(Date(k),1+4,10+4);
  else
    d = extractBetween(Date(k),1,10);
  end
  dd = day(datetime(d),'dayofyear');
  % Hospitalized = HospitalizedWithSymptoms + HospitalizedInIntensiveCare
  % Quarantined  = Hospitalized+HomeConfinement
  I = Quarantined(k);
  C = Confirmed(k);
  D = Deaths(k);
  R = C-I-D; %Recovered(k);
  N = RegionName(k);
  N = strrep(N,'-','_');
  N = strrep(N,' ','_');
  N = strrep(N,'.','');
  N = strrep(N,'''','');
  DATA.(N).d = [DATA.(N).d, dd];
  DATA.(N).I = [DATA.(N).I, I];
  DATA.(N).R = [DATA.(N).R, R];
  DATA.(N).D = [DATA.(N).D, D];
  DATA.(N).C = [DATA.(N).C, C];
end

fprintf('days %d\n',length(DATA.Lombardia.d));

ITA.pop = DATA.Lombardia.pop             + ...
          DATA.Lazio.pop                 + ...
          DATA.Campania.pop              + ...
          DATA.Sicilia.pop               + ...
          DATA.Veneto.pop                + ...
          DATA.Emilia_Romagna.pop        + ...
          DATA.Piemonte.pop              + ...
          DATA.Puglia.pop                + ...
          DATA.Toscana.pop               + ...
          DATA.Calabria.pop              + ...
          DATA.Sardegna.pop              + ...
          DATA.Liguria.pop               + ...
          DATA.Marche.pop                + ...
          DATA.Abruzzo.pop               + ...
          DATA.Friuli_Venezia_Giulia.pop + ...
          DATA.PA_Trento.pop             + ...
          DATA.PA_Bolzano.pop            + ...
          DATA.Umbria.pop                + ...
          DATA.Basilicata.pop            + ...
          DATA.Molise.pop                + ...
          DATA.Valle_dAosta.pop;

nd = 92;

ITA.d = DATA.Lombardia.d(1:nd); % Ne basta uno qualunque

ITA.I = DATA.Lombardia.I(1:nd)             + ...
        DATA.Campania.I(1:nd)              + ...
        DATA.Sicilia.I(1:nd)               + ...
        DATA.Veneto.I(1:nd)                + ...
        DATA.Emilia_Romagna.I(1:nd)        + ...
        DATA.Piemonte.I(1:nd)              + ...
        DATA.Puglia.I(1:nd)                + ...
        DATA.Toscana.I(1:nd)               + ...
        DATA.Calabria.I(1:nd)              + ...
        DATA.Sardegna.I(1:nd)              + ...
        DATA.Liguria.I(1:nd)               + ...
        DATA.Marche.I(1:nd)                + ...
        DATA.Abruzzo.I(1:nd)               + ...
        DATA.Friuli_Venezia_Giulia.I(1:nd) + ...
        DATA.PA_Trento.I(1:nd)             + ...
        DATA.PA_Bolzano.I(1:nd)            + ...
        DATA.Umbria.I(1:nd)                + ...
        DATA.Basilicata.I(1:nd)            + ...
        DATA.Molise.I(1:nd)                + ...
        DATA.Valle_dAosta.I(1:nd);

ITA.R = DATA.Lombardia.R(1:nd)             + ...
        DATA.Campania.R(1:nd)              + ...
        DATA.Sicilia.R(1:nd)               + ...
        DATA.Veneto.R(1:nd)                + ...
        DATA.Emilia_Romagna.R(1:nd)        + ...
        DATA.Piemonte.R(1:nd)              + ...
        DATA.Puglia.R(1:nd)                + ...
        DATA.Toscana.R(1:nd)               + ...
        DATA.Calabria.R(1:nd)              + ...
        DATA.Sardegna.R(1:nd)              + ...
        DATA.Liguria.R(1:nd)               + ...
        DATA.Marche.R(1:nd)                + ...
        DATA.Abruzzo.R(1:nd)               + ...
        DATA.Friuli_Venezia_Giulia.R(1:nd) + ...
        DATA.PA_Trento.R(1:nd)             + ...
        DATA.PA_Bolzano.R(1:nd)            + ...
        DATA.Umbria.R(1:nd)                + ...
        DATA.Basilicata.R(1:nd)            + ...
        DATA.Molise.R(1:nd)                + ...
        DATA.Valle_dAosta.R(1:nd);

ITA.D = DATA.Lombardia.D(1:nd)             + ...
        DATA.Campania.D(1:nd)              + ...
        DATA.Sicilia.D(1:nd)               + ...
        DATA.Veneto.D(1:nd)                + ...
        DATA.Emilia_Romagna.D(1:nd)        + ...
        DATA.Piemonte.D(1:nd)              + ...
        DATA.Puglia.D(1:nd)                + ...
        DATA.Toscana.D(1:nd)               + ...
        DATA.Calabria.D(1:nd)              + ...
        DATA.Sardegna.D(1:nd)              + ...
        DATA.Liguria.D(1:nd)               + ...
        DATA.Marche.D(1:nd)                + ...
        DATA.Abruzzo.D(1:nd)               + ...
        DATA.Friuli_Venezia_Giulia.D(1:nd) + ...
        DATA.PA_Trento.D(1:nd)             + ...
        DATA.PA_Bolzano.D(1:nd)            + ...
        DATA.Umbria.D(1:nd)                + ...
        DATA.Basilicata.D(1:nd)            + ...
        DATA.Molise.D(1:nd)                + ...
        DATA.Valle_dAosta.D(1:nd);

ITA.C = DATA.Lombardia.C(1:nd)             + ...
        DATA.Campania.C(1:nd)              + ...
        DATA.Sicilia.C(1:nd)               + ...
        DATA.Veneto.C(1:nd)                + ...
        DATA.Emilia_Romagna.C(1:nd)        + ...
        DATA.Piemonte.C(1:nd)              + ...
        DATA.Puglia.C(1:nd)                + ...
        DATA.Toscana.C(1:nd)               + ...
        DATA.Calabria.C(1:nd)              + ...
        DATA.Sardegna.C(1:nd)              + ...
        DATA.Liguria.C(1:nd)               + ...
        DATA.Marche.C(1:nd)                + ...
        DATA.Abruzzo.C(1:nd)               + ...
        DATA.Friuli_Venezia_Giulia.C(1:nd) + ...
        DATA.PA_Trento.C(1:nd)             + ...
        DATA.PA_Bolzano.C(1:nd)            + ...
        DATA.Umbria.C(1:nd)                + ...
        DATA.Basilicata.C(1:nd)            + ...
        DATA.Molise.C(1:nd)                + ...
        DATA.Valle_dAosta.C(1:nd);

mkdir( 'data' );
for k=1:length(RN)
  N = RN(k);
  N = strrep(N,'-','_');
  N = strrep(N,' ','_');
  N = strrep(N,'.','');
  N = strrep(N,'''','');
  d = DATA.(N).d;
  I = DATA.(N).I;
  R = DATA.(N).R;
  D = DATA.(N).D;
  C = DATA.(N).C;
  fname = sprintf('./data/%s.txt', N );
  fd = fopen( fname, 'w');
  fprintf( fd, '# regione: %s\n', RN(k) );
  fprintf( fd, '# day, I, R, D, C\n' );
  for j=1:length(d)
    fprintf( fd, '%d\t%d\t%d\t%d\n', d(j), I(j), R(j), D(j), C(j) );
  end
end

d = ITA.d;
I = ITA.I;
R = ITA.R;
D = ITA.D;
C = ITA.C;
fd = fopen( './data/italiatxt', 'w');
fprintf( fd, '# ITALIA\n' );
fprintf( fd, '# day, I, R, D, C\n' );
for j=1:length(d)
  fprintf( fd, '%d\t%d\t%d\t%d\n', d(j), I(j), R(j), D(j), C(j) );
end
